---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: traefik
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutes
      - ingressroutetcps
      - ingressrouteudps
      - middlewares
      - tlsoptions
      - tlsstores
      - traefikservices
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik
subjects:
  - kind: ServiceAccount
    name: traefik
    namespace: traefik
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  labels:
    app: traefik
  annotations:
    metallb.universe.tf/address-pool: my-ip-space
spec:
  type: LoadBalancer
  selector:
    app: traefik
  ports:
  - port: 80
    name: traefik
    targetPort: traefik
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-proxy
  labels:
    app: traefik-proxy
  annotations:
    metallb.universe.tf/address-pool: traefik
spec:
  type: LoadBalancer
  selector:
    app: traefik
  ports:
  - port: 80
    name: http
    targetPort: http
  - port: 443
    name: https
    targetPort: https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 60
      hostNetwork: false
      volumes:
        - name: traefik
          hostPath:
            path: /data/traefik
            type: Directory
      containers:
      - image: traefik:2.2.0
        name: traefik
        resources:
        env:
          - name: CF_API_EMAIL
            valueFrom:
              secretKeyRef:
                name: cloudflare
                key: email
          - name: CF_DNS_API_TOKEN
            valueFrom:
              secretKeyRef:
                name: cloudflare
                key: dns-token
          - name: CF_ZONE_API_TOKEN
            valueFrom:
              secretKeyRef:
                name: cloudflare
                key: zone-token
        ports:
        - name: "http"
          containerPort: 80
          protocol: TCP
        - name: "https"
          containerPort: 443
          protocol: TCP
        - name: "traefik"
          containerPort: 8080
          protocol: TCP
        volumeMounts:
          - name: traefik
            mountPath: /data
        args:
          - "--log.level=DEBUG"
          - "--api.insecure=true"
          - "--api.dashboard=true"
          - "--ping=true"
          - "--providers.kubernetescrd"
          - "--accesslog=true"
          - "--certificatesresolvers.le.acme.dnsChallenge=true"
          - "--certificatesResolvers.le.acme.dnsChallenge.provider=cloudflare"
          - "--certificatesresolvers.le.acme.email=iam@defn.sh"
          - "--certificatesresolvers.le.acme.storage=/data/acme.json"
          - "--certificatesresolvers.le.acme.caServer=https://acme-v02.api.letsencrypt.org/directory"
          - "--entrypoints.traefik.address=:8080"
          - "--entrypoints.https.address=:443"
          - "--entrypoints.https.http.tls.certResolver=le"
          - "--entrypoints.https.http.tls.domains[0].main=*.eldri.ch"
          - "--entrypoints.https.http.tls.domains[1].main=*.whoa.bot"
          - "--entrypoints.https.http.tls.domains[2].main=*.defn.sh"
          - "--entrypoints.http.address=:80"
          - "--entrypoints.http.http.redirections.entryPoint.to=https"
          - "--entrypoints.http.http.redirections.entryPoint.scheme=https"
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  namespace: traefik
  name: traefik
  labels:
    app: traefik
spec:
  entryPoints:
    - https
  routes:
  - match: HostRegexp(`traefik.{domain:.+}`)
    kind: Rule
    services:
    - name: traefik
      port: 80
